/*
 * memory.h
 */

#ifndef KERNEL_MEMORY_H_
#define KERNEL_MEMORY_H_

#include <kernel/types.h>

#include <multiboot.h>

// ============================================================================
// ----------------------------------------------------------------------------
// ============================================================================

#define PAGE_SIZE	(4096)
#define PAGE_MASK	(~(PAGE_SIZE - 1))
#define PAGE_OFFSET(x) ((x) & (~PAGE_MASK))

#define BAD_PAGE ((uint32_t) 0)

// ----------------------------------------------------------------------------

typedef uint32_t pgframe_t; // represent a 32-bit physical address of a page

// ============================================================================
// ----------------------------------------------------------------------------
// ============================================================================

bool memory_map_init(multiboot_uint32_t mmap_addr, multiboot_uint32_t mmap_length);
bool memory_reserve(uint32_t from_addr, uint32_t *addr, size_t *len);

// ----------------------------------------------------------------------------

bool pfa_init(void);
pgframe_t pfa_alloc(void);
void pfa_free(pgframe_t pgf);

// ============================================================================
// ----------------------------------------------------------------------------
// ============================================================================

#endif /* !KERNEL_MEMORY_H_ */
