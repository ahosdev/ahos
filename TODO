# TODO

# =============================================================================
# -----------------------------------------------------------------------------
# =============================================================================

- bootloader (stage-3):
	- parsing and loading kernel ELF binary
	- filling multiboot header using BIOS interruptions (unreal mode)
		- detect memory
		- detect hardware

- memory:
	- setup paging / virtual memory
	- get rid of bss allocated memory and uses kmalloc() when applicable

- serial:
	- handle asynchronous printing
	- optimize output
	- FIXME: bochs detects a 'com1: transmit FIFO overflow'

- ps2ctrl:
	- "uniformize" the send/receive/wait functions + clean/refactor *old* code
	- handle dual channel completely
	- document the driver model
	- PS/2 mouse can be tested with BOCHS (?)

- keyboard:
	- export keyboard commands
	- protect keyboard commands against unstarted driver
	- handle US QWERTY key mapping
	- handle special (shift / ctrl / etc...)

- panic:
	- basic handler which reset halt the cpu
	- display register state
	- pretty print the stack
	- unwind the stack
		- build a symbol map ('ahos.symbol') file

- handle INTEL exceptions

- security/stability:
	- enable stack cookie
	- disallow first page access to detect NULL pointer deref

- terminal:
	- buffering
	- scrolling with keyboard
	- fixe: printing from IRQ can breaks the current line

- kernel:
	- implement a basic synchronisation primitives (mutex/semaphore/spinlock?)
	- tasks / process
	- system call
	- userland
	- use an error value (integer) instead of 'boolean'

- filesystem:
	- ISO driver [read-only]
	- FAT12 / FAT16 drivers [read-only]

- libc:
	- strncpy()

- compilation
	- userland toolchain (hosted)

- build
	- make a top-level Makefile and remove unnecessary scripts

- type
	- queue

# =============================================================================
# -----------------------------------------------------------------------------
# =============================================================================
